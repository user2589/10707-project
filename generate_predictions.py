#!/usr/bin/env python3
# coding=utf-8

import argparse
import logging
import os

import numpy as np
import pandas as pd
import tensorflow as tf


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description=""""
Build BERT embeddings for the pronoun resolution project.

Input file is expected to contain at least three columns:
    'Text': text of the sequence
    'Pronoun-offset': character offset of the pronoun
    'Pronoun': actual pronoun
    'A', 'B': the alternatives
    'A-offset': character offset of the A alternative
    'B-offset': character offset of the B alternative

The output is a CSV file with columns:
    'ID', 'A', 'B', 'NEITHER'

    """)
    parser.add_argument('model_filename',
                        help='Saved model (generated by train_nn.py)')
    parser.add_argument('embeddings_filename',
                        default="input/test_stage_2_bert_embed.csv",
                        help='Embeddings filename, "-" or skip for stdin')
    parser.add_argument('-o', '--output', default="-",
                        type=argparse.FileType('w'),
                        help='Output filename, "-" or skip for stdout')
    args = parser.parse_args()

    model = tf.keras.models.load_model(args.model_fname)
    embeddings_df = pd.read_csv(args.embeddings_filename, index_col=0)
    be = embeddings_df.applymap(
        lambda value: np.array([float(v) for v in value.split(",")]))

    td = np.array(list(be.apply(
        lambda row: np.concatenate(row[['Pronoun', 'A', 'B']]), axis=1)))

    predictions = pd.DataFrame(
        model.predict(td),
        columns=['A', 'B', 'NEITHER'],
        index=be.index)
    predictions.to_csv(args.output)
